Starting code feedback for Shiyuan, Week1

Current Points = 100

Note that: 
(1) Major sections begin with a double "====" line 
(2) Subsections begin with a single "====" line 
(3) Code output or text file content are printed within single "*****" lines 

======================================================================
======================================================================
Your Git repo size this week is about 12.43 MiB on disk 

PART 1: Checking project workflow...

Found the following directories in parent directory: .git, CMEEminiproject, week7, week3, week2, Feedback, HPC, week1

Found the following files in parent directory: README.md, .gitignore

Checking for key files in parent directory...

Found .gitignore in parent directory, great! 

Printing contents of .gitignore:

**********************************************************************
*~ 
*.tmp
*.log
__pycache__
*/sandbox
**/results/*
!**/results/.gitkeep
**/sandbox/*
!**/sandbox/.gitkeep
**********************************************************************

Found README in parent directory, named: README.md

Printing contents of README.md:

**********************************************************************
# My CMEECoursework Repository

## Description

This repository contains all CMEE coursework files.

## Languages

Python, R, Jupyter, Latex, Shell

**Installation:**

To use scripts in this directory clone the repository.

```bash
git clone git@github.com:shiyuan-huang22/CMEECourseWork.git
```

## Project structure and Usage 

Please check weekly README.md 

## Author name and contact

Name: Shiyuan Huang

Email: sh422@ic.ac.uk

**********************************************************************

======================================================================
Looking for the weekly directories...

Found 4 weekly directories: week1, week2, week3, week7

The Week1 directory will be assessed 

======================================================================
======================================================================
PART 2: Checking weekly code and workflow...

======================================================================
Assessing WEEK1...

Found the following directories: code, result, data

Found the following files: README.md, .gitignore

Checking for readme file in weekly directory...

Found README in parent directory, named: README.md

Printing contents of README.md:

**********************************************************************
# Computing week1
## Description	
This directory contains all shell scripts for coursework week1 in shell scripting and scientific documents with Latex.
## Languages
Bash,Latex
## Dependencies
Most scripts in the current repository can be ran in bash shell directly. 

 ***tiff2png.sh*** needs the imagemagick.

**Installation**: 
```bash
sudo apt install imagemagick
```


LaTeX installation is required:

**Installation**: 
```bash
sudo apt install texlive-full texlive-fonts-recommended texlive-pictures texlive-latex-extra imagemagick
```
## Installation
To use scripts you can clone the repository:
```bash
git clone git@github.com:shiyuan-huang22/CMEECourseWork.git
```
## Project structure and Usage
- **CompileLaTeX.sh**: A script to compile latex with bibtex.
- **ConcatenateTwoFiles.sh**: Concatenate the contents of two files to a merged file.
- **countlines.sh**: Count number of lines of a file.
- **csvtospace.sh**: Substitute commas in the files space the save the output into a a space separated .txt file
- **tabtocsv.sh**: substitute the tabs in the files with commas then saves the output into a .csv file
- **tiff2png.sh**: Convert a .tif image into .png image; or convert all .tif images in the input directory to .png files.
- **variables.sh**: Examples for usage of variables.
- **UnixPrac1.txt**: UNIX shell commands for reading .fasta files.
## Author name and contact  
Name:Shiyuan Huang

Email:sh422@ic.ac.uk

**********************************************************************

Results directory is empty - good! 

Found 11 code files: tiff2png.sh, CountLines.sh, FirstBiblio.bib, tabtocsv.sh, variables.sh, FirstExample.tex, boilerplate.sh, csvtospace.sh, ConcatenateTwoFiles.sh, UnixPrac1.txt, CompileLaTeX.sh

======================================================================
Testing script/code files...

======================================================================
Inspecting script file tiff2png.sh...

File contents are:

**********************************************************************
#!/bin/bash
# Author: Shiyuan sh422@ic.ac.uk
# Script: tiff2png.sh
# Description: Convert tiff to png
# Arguements: none
# Date: Oct.2022


if [ -z "$1" ] ; then #Check if user entered a file  
	echo "Please enter an image name!"
else
	if [ -f "$1" ] ; then #If user enter a file and it exists
    
	    if [[ $1 == *.tif ]] ; then #Check if the entered file is an image	
		
			echo "converting $1"
			convert "$1" "${1%tif}png" 
			echo "Done!"
		else
			echo "Input is not a tiff image"
		fi
	else 
        echo "File does not exist"
    fi

fi
**********************************************************************

Testing tiff2png.sh...

Output (only first 500 characters): 


**********************************************************************
Please enter an image name!

**********************************************************************

Code ran without errors

Time consumed = 0.00365s

======================================================================
Inspecting script file CountLines.sh...

File contents are:

**********************************************************************
#!/bin/bash
#Author: shiyuan sh422@ic.ac.uk
#Script: CountLines.sh
#Description: Count lines of a file
#Arguements: none
#Date: Oct.2022


if [ -f "$1" ] ; then #If user had entered a file name
  
  NumLines=`wc -l < $1`
  echo "The file $1 has $NumLines lines"

elif [ -z "$1" ] ; then #If user did not entered a file name
 
  echo "Oops! Please enter a file name"

else #User had entered a file name but the file did not exist

  echo "Waring! Please enter a existing file"

fi
exit
**********************************************************************

Testing CountLines.sh...

Output (only first 500 characters): 


**********************************************************************
Oops! Please enter a file name

**********************************************************************

Code ran without errors

Time consumed = 0.00374s

======================================================================
Inspecting script file FirstBiblio.bib...

File contents are:

**********************************************************************
@article{verhulst1838notice,
  title={Notice sur la loi que la population suit dans son accroissement},
  author={Verhulst, Pierre-Fran{\c{c}}ois},
  journal={Corresp. Math. Phys.},
  volume={10},
  pages={113--126},
  year={1838}
}
**********************************************************************

Testing FirstBiblio.bib...

======================================================================
Inspecting script file tabtocsv.sh...

File contents are:

**********************************************************************
#!/bin/bash
# Author: shiyuan sh422@ic.ac.uk
# Script: tabtocsv.sh
# Description: substitute the tabs in the files with commas
#
# Saves the output into a .csv file
# Arguments: 1 -> tab delimited file
# Date: Oct 2022

if [ -z "$1" ] ; then #If user did not enter the file name 
	echo "Oops! Please enter a file name"

else #User had entered the file name 
	if [ -f "$1" ] ; then # if the file exists
      
      if [ -s "$1" ] ; then #If the file is not empty

          echo "Creating a comma delimited version of $1"
          cat $1 | tr -s "\t" "," >> $1.csv
          echo "done!"

      else #If the file is empty
          echo "Warning! File entered is empty!"
      fi

  else #If the input file does not exist
        echo "Warning! File entered does not exist"
  fi

fi
exit

**********************************************************************

Testing tabtocsv.sh...

Output (only first 500 characters): 


**********************************************************************
Oops! Please enter a file name

**********************************************************************

Code ran without errors

Time consumed = 0.00292s

======================================================================
Inspecting script file variables.sh...

File contents are:

**********************************************************************
#!/bin/bash

## Illustrates the use of variables 

# Special variables

echo "This script was called with $# parameters"
echo "The script's name is $0"
echo "The arguments are $@"
echo "The first argument is $1"
echo "The second argument is $2"

# Assigned Variables; Explicit declaration:
MY_VAR='some string' 
echo 'the current value of the variable is:' $MY_VAR
echo 'Please enter a new string'
read MY_VAR
echo 'the current value of the variable is:' $MY_VAR


## Assigned Variables; Reading (multiple values) from user input:
echo 'Enter two numbers separated by space(s)'
read a b
echo 'you entered' $a 'and' $b '; Their sum is:'
if [ -z "$a" ] || [ -z "$b" ] ; then
  MY_SUM=NULL
else
  MY_SUM=$(expr $a + $b)
fi
echo $MY_SUM
exit
**********************************************************************

Testing variables.sh...

Output (only first 500 characters): 


**********************************************************************
This script was called with 0 parameters
The script's name is variables.sh
The arguments are 
The first argument is 
The second argument is 
the current value of the variable is: some string
Please enter a new string
the current value of the variable is:
Enter two numbers separated by space(s)
you entered and ; Their sum is:
NULL

**********************************************************************

Code ran without errors

Time consumed = 0.00309s

======================================================================
Inspecting script file FirstExample.tex...

File contents are:

**********************************************************************
\documentclass[12pt]{article}

\title{A Simple Document}

\author{Your Name}

\date{}

\begin{document}
  \maketitle
  
  \begin{abstract}
    This paper analyzes a seminal equation in population biology.
  \end{abstract}
  
  \section{Introduction}
    Blah Blah
  
  \section{Materials \& Methods}
  
  A foundational equation of population biology is:
  
  \begin{equation}
    \frac{dN}{dt} = r N (1 - \frac{N}{K})
  \end{equation}
  
  It was first proposed by Verhulst in 1838 \cite{verhulst1838notice}.
  
  \bibliographystyle{plain}
  
  \bibliography{FirstBiblio}

\end{document}
**********************************************************************

Testing FirstExample.tex...

======================================================================
Inspecting script file boilerplate.sh...

File contents are:

**********************************************************************
#!/bin/sh
# Author: shiyuan sh422@ic.ac.uk
# Script: boilerplate.sh
# Desc: simple boilerplate for shell scripts
# Arguments: none
# Date: Oct 2022

echo -e "\nThis is a shell script! \n"

#exit

**********************************************************************

Testing boilerplate.sh...

Output (only first 500 characters): 


**********************************************************************

This is a shell script! 


**********************************************************************

Code ran without errors

Time consumed = 0.00394s

======================================================================
Inspecting script file csvtospace.sh...

File contents are:

**********************************************************************
#!/bin/bash
# Author: shiyuan sh422@ic.ac.uk
# Script: csvtospace.sh
# Description: substitute commas in the files  
#
# Save the output into a a space separated .txt file
# Arguments: 1 -> txt delimited file
# Date: Oct 2022  

if [ -z "$1" ]; then  #If user did not enter the file name  
    echo  "Oops! No input! Please enter a file name"
else # User had entered the file name
  if [ -f "$1" ] ; then #If file entered exists
    
    if [ -s "$1" ]; then  #If the file is not empty 

      if grep -q "," "$1" ;then # If there are commas in this file

        echo "Creating a space seperated version of $1 ..."

        Filename=$(basename "$1") #remove the path 
        NewFilename="${Filename%.*}" # remove the suffix

        cat $1 | tr -s "," "\t" >> ../data/Temperatures/$NewFilename.txt
        echo "Done!"

      else #There are no commas in this file
        echo "Warning! No commas found in this file"
      fi

    else # If the file is empty
        echo "Warning! File entered is empty"
    fi

  else # If file entered does not exist
    echo "Warning! File entered does not exist"
  fi
fi
exit

**********************************************************************

Testing csvtospace.sh...

Output (only first 500 characters): 


**********************************************************************
Oops! No input! Please enter a file name

**********************************************************************

Code ran without errors

Time consumed = 0.00339s

======================================================================
Inspecting script file ConcatenateTwoFiles.sh...

File contents are:

**********************************************************************
#!/bin/bash
# Author: Shiyuan sh422@ic.ac.uk
# Script: ConcatenateTwoFiles.sh
# Description: Concatenate the contents of two files
# Arguements: 1 + 2 -> 3
# Date: Oct.2022


if [ -z "$1" -o -z "$2" ];then
  echo "Please enter two files as your input"
elif [ -z "$3" ];then
  echo "Please enter your output file"
else  
  cat $1 > $3
  cat $2 >> $3
  echo "Merged File is"
  cat $3
fi
exit
**********************************************************************

Testing ConcatenateTwoFiles.sh...

Output (only first 500 characters): 


**********************************************************************
Please enter two files as your input

**********************************************************************

Code ran without errors

Time consumed = 0.00255s

======================================================================
Inspecting script file UnixPrac1.txt...

File contents are:

**********************************************************************
#1 Count how many lines are in each file 
wc -l ../data/fasta/*.fasta

#2 Print everything from the second line for the E.coli genome
tail -n +2 ../data/fasta/E.coli.fasta


#3 Count the sequence length of the genome
tail -n +2 ../data/fasta/E.coli.fasta | tr -d "\n" | wc -c

#4 Count the matches of "ATCG"
tail -n +2 ../data/fasta/E.coli.fasta | tr -d "\n" | grep -o ATGC | wc -l

#5 Compute AT/CG ratio
echo  $(grep -o [A,T] ../data/fasta/E.coli.fasta | wc -l) / $(grep -o [G,C] ../data/fasta/E.coli.fasta | wc -l) | bc -l

**********************************************************************

Testing UnixPrac1.txt...

======================================================================
Inspecting script file CompileLaTeX.sh...

File contents are:

**********************************************************************
#!/bin/bash
if [ -z "$1" ] ;then #If user did not enter a file name
  echo "Oops! Please enter a file name"
else
  if [ -f "$1" ]; then #If file entered exists
 
    if [[ $1 == *.tex ]] ;then #If user entered .tex file

      x=${1%.tex}
      pdflatex $x.tex
      bibtex $x.aux
      pdflatex $x.tex
      pdflatex $x.tex
      evince $x.pdf &

    # Cleanup
      rm *.aux
      rm *.log
      rm *.bbl
      rm *.blg

    else
      echo "Please enter a .tex file"
    fi

  else
     echo "Warning! Please enter a existing file"
  fi

fi


**********************************************************************

Testing CompileLaTeX.sh...

Output (only first 500 characters): 


**********************************************************************
Oops! Please enter a file name

**********************************************************************

Code ran without errors

Time consumed = 0.00237s

======================================================================
======================================================================
Finished running scripts

Ran into 0 errors

======================================================================
======================================================================

FINISHED WEEKLY ASSESSMENT

Current Points for the Week = 100

NOTE THAT THESE ARE POINTS, NOT MARKS FOR THE WEEK!